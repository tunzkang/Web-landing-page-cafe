/*! CÁC THỂ LOẠI ĐỊNH DẠNG KHI LÀM WEB (đã tham khảo trên internet) */
/** Medium Layout: 1280px */
/** Tablet Layout: 768px */
/** Mobile Layout: 320px */
/** Wide Mobile Layout: 480px */

/** tất cả các thuộc tính selection; placeholder đều được tham khảo trên internet trước khi đưa vào bài */
::-moz-selection {
  /*! Code for Firefox */
  /*TODO: Bộ chọn ::selection dùng để chọn phần văn bản đang được người dùng bôi đen. */
  /*? đối với trình duyệt Firefox thì ta phải thêm -moz */
  background-color: #b68834; /* nền màu #b68834 */
  color: #fff; /* thiết lập chữ trắng */
  /*! -->>> thiết lập chữ trắng và nền màu #b68834 khi người dùng bôi đen 1 dòng chữ bất kì */
}
::selection {
  /*? tương tự như comment ở trên */
  background-color: #b68834;
  color: #fff;
}
::-webkit-input-placeholder {
  /* WebKit, Blink, Edge */
  /*
  *TODO: Thuộc tính placeholder là thuộc tính mới trong HTML5 dành cho thẻ <input>
  *TODO: và <textarea>, tác dụng của placebolder là cung cấp thông tin cho người dùng 
  *TODO: để họ biết họ sẽ nhập cái gì.
  */
  /*TODO: để style cho văn bản trong cái placeholder thì bên css sử dụng thuộc tính ::placeholder */
  /* 
  ?  đối với các trình duyệt cũ hơn thì phải dùng tới các tiền tố của nhà cung cấp 
  ?  chẳng hạn như là -webkit, -moz,...
  */
  color: #777777;
  font-weight: 300;
}
:-moz-placeholder {
  /* Mozilla Firefox 4 to 18 */
  color: #777777;
  opacity: 1;
  font-weight: 300;
}
::-moz-placeholder {
  /* Mozilla Firefox 19+ */
  color: #777777;
  opacity: 1;
  font-weight: 300;
}
:-ms-input-placeholder {
  /* Internet Explorer 10-11 */
  color: #777777;
  font-weight: 300;
}
::-ms-input-placeholder {
  /* Microsoft Edge */
  color: #777777;
  font-weight: 300;
}


body {
  color: #777777;
  font-family: "Poppins", sans-serif;
  font-size: 14px;
  font-weight: 300;
  line-height: 1.625em;
  position: relative;
}
ol, ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
select{display:block;}
figure{margin:0;}
a {
  -webkit-transition: all 0.3s ease 0s;
  -moz-transition: all 0.3s ease 0s;
  -o-transition: all 0.3s ease 0s;
  transition: all 0.3s ease 0s;
}
iframe{border:0;}
a, a:focus, a:hover {
  text-decoration: none;
  outline: 0;
}
.btn.active.focus, .btn.active:focus, .btn.focus, .btn.focus:active, .btn:active:focus, .btn:focus {
  text-decoration: none;
  outline: 0;
}
.card-panel {
  margin: 0;
  padding: 60px;
}
/**Typography**/
.btn i, .btn-large i, .btn-floating i, .btn-large i, .btn-flat i {
  font-size: 1em;
  line-height: inherit;
}
.gray-bg{background:#f9f9ff;}

h1,h2,h3,
h4,h5,h6 {
  font-family: "Poppins", sans-serif;
  color: #222222;
  line-height: 1.2em !important; 
  /*? Important được sử dụng để thay đổi thứ tự ưu tiên của code CSS, thuộc tính css được gán important thì nó sẽ có mức ưu tiên cao nhất, cho dù thành phần đó được định nghĩa inline hay trong file css. */
  margin-bottom: 0;
  margin-top: 0;
  font-weight: 600;
}
.h1,.h2,.h3,
.h4,.h5,.h6 {
  margin-bottom: 0;
  margin-top: 0;
  font-family: "Poppins", sans-serif;
  font-weight: 600;
  color: #222222;
}
h1,.h1{ font-size:36px; }
h2,.h2{ font-size:30px; }
h3,.h3{ font-size:24px; }
h4,.h4{ font-size:18px; }
h5,.h5{ font-size:16px; }
h6,.h6{ font-size:14px;color:#222222; }
td,th{ border-radius: 0px; }

/*! phần đã tham khảo internet (tham khảo tại https://evondev.com/before-va-after-trong-css/)*/
/*
*  before và afterafter là các pseudo-element 
*  các pseudo-element là các phần tử giảgiả
*  phần tử giả được tạo ra sẽ cócó display: inline
*  thẻ img ko áp dụng được các :before ::after
*  ::before sẽ tạo ra một phần tử giả luôn luôn là element con đầu tiên của element được sử dụng
*  tương tự với ::after cũng thế 
*/
.clear::before, .clear::after {
  content: " ";
  display: table;

  /*? ========= phần hack não, cái này copy trên internet ========= ?*/
  /* 
  !  content có khoảng " " là một cách để tránh lỗi Opera (Opera bug) 
  !  khi mà thuộc tính contenteditable bao gồm ở tất cả mọi nơi trong tài liệu 
  !  hoặc nó sẽ gây nên khoảng cách ở trên top và bottom của cái element đã xoá (clearfixed)
  */
  /* 
  !  sử dụng 'table' thay vì 'block' chỉ cần thiết khi sử dụng ':before' 
  !  để bao gồm luôn top-margin của các phần tử con 
  */

  /** ====== NGUYÊN VĂN ====== **/
  /**
   *! For modern browsers
   ** 1. The space content is one way to avoid an Opera bug when the
   **    contenteditable attribute is included anywhere else in the document.
   **    Otherwise it causes space to appear at the top and bottom of elements
   **    that are clearfixed.
   ** 2. The use of `table` rather than `block` is only necessary if using
   **    `:before` to contain the top-margins of child elements.
  */
}



/*--------------------------------------------------------------
                              Header
--------------------------------------------------------------*/
#header {
  padding: 14px 0;
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  transition: all 0.5s;
  z-index: 997;
}

#header.header-scrolled {
  background: rgba(20, 2, 0, 0.8);
  transition: all 0.5s;
}

.header-top ul {
  text-align: right;
  margin-right: 5px;
}

.header-top ul li {
  color: #fff;
  display: inline-block;
  margin-right: 20px;
}

.header-top ul li a{color:#fff;}

@media (max-width: 960px) {
 .header-top{display:none;}
}

@media (max-width: 673px) {
 #logo{margin-left:20px;}
}

/* Media CSS là một "công nghệ" được giới thiệu trong Css3. Nguyên tắc nó sử dụng trên thông qua các thông số kích thước màn hình được khai báo thông qua @media Với công cụ này chúng ta có thể phân đoạn Css chúng ta ra nhiều phần khác nhau tương ứng với kích thước của các loại thiết bị. Thuộc tính này có cú pháp như sau:
?    @media not|only mediatype and (media feature) {
?      CSS-Code;
?    } 
*/
/*! tham khảo tại https://viblo.asia/p/gioi-thieu-ve-media-css-trong-responsive-4dbZNDEL5YM */
#header #logo h1 {
  font-size: 34px;
  margin: 0;
  padding: 0;
  line-height: 1;
  font-weight: 700;
  letter-spacing: 3px;
}

#header #logo h1 a, #header #logo h1 a:hover {
  color: #fff;
  padding-left: 10px;
  border-left: 4px solid #b68834;
}

#header #logo img {
  padding: 0;
  margin: 0;
}

@media (max-width: 768px) {
 #header #logo h1{font-size:28px;}
 #header #logo img{max-height:40px;}
}

/*--------------------------------------------------------------
                          Navigation Menu
--------------------------------------------------------------*/
/* Nav Menu Essentials */
.nav-menu, .nav-menu * {
  margin: 0;
  padding: 0;
  list-style: none;
}

.nav-menu ul {
  position: absolute;
  display: none;
  top: 100%;
  left: 0;
  z-index: 99;
}

.nav-menu li {
  position: relative;
  white-space: nowrap;
}

.nav-menu > li{float:left;}

.nav-menu li:hover > ul, .nav-menu li.sfHover > ul {display:block;}

.nav-menu ul ul {
  top: 0;
  left: 100%;
}

.nav-menu ul li {
  min-width: 180px;
  text-align: left;
}

/* Nav Menu Arrows */
.sf-arrows .sf-with-ul{padding-right:30px;}

.sf-arrows .sf-with-ul:after {
  content: "\f107";
  position: absolute;
  right: 15px;
  font-family: 'Times New Roman', Times, serif;
  font-style: normal;
  font-weight: normal;
}

.sf-arrows ul .sf-with-ul:after{content:"\f105";}

/* Nav Meu Container */
#nav-menu-container{margin:0;}

@media (max-width: 768px) {
 #nav-menu-container{display:none;}
}

/* Nav Meu Styling */
.nav-menu a {
  padding: 0 8px 0px 8px;
  text-decoration: none;
  display: inline-block;
  color: #fff;
  font-weight: 400;
  font-size: 12px;
  text-transform: uppercase;
  outline: none;
}

.nav-menu > li {
  margin-left: 10px;
}

.nav-menu ul {
  margin: 16px 0 0 0;
  padding: 10px;
  box-shadow: 0px 0px 30px rgba(127, 137, 161, 0.25);
  background: #fff;
}

.nav-menu ul li{transition:0.3s;}

.nav-menu ul li a {
  padding: 10px;
  color: #333;
  transition: 0.3s;
  display: block;
  font-size: 12px;
  text-transform: none;
}

.nav-menu ul li:hover > a{color:#b68834;}

.nav-menu ul ul{margin:0;}
